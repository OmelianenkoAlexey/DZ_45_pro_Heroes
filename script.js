// ! –î–ó 47. Heroes ü¶∏üèº‚Äç‚ôÇÔ∏è ü¶∏üèª‚Äç‚ôÄÔ∏è

// –í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã.

// –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–µ—Ç–µ —Å–∞–º–∏ –Ω–∞ —Å–∞–π—Ç–µ

// https://mockapi.io/projects

// –ü—Ä–∏–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞ —Ä–µ—Å—É—Ä—Å–∞ heroes(—Ç–æ –µ—Å—Ç—å path –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å heroes):

// {
//     "name": "Iron Man",
//         "comics": "Marvel",
//             "favourite": true,
//                 "id": "1"
// }


// –ü—Ä–∏–º–µ—Ä –æ–±—ä–µ–∫—Ç–∞ —Ä–µ—Å—É—Ä—Å–∞ universes:

// {
//     "id": "1",
//         "name": "Marvel"
// }

// ! –¢–∞–±–ª–∏—Ü–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 4-—Ö –∫–æ–ª–æ–Ω–æ–∫:

// Name Surname
// Comics (DC, Marvel, Comix Zone)
// Favourite (—á–µ–∫–±–æ–∫—Å)
// Actions (–æ–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ Delete)

// ! –ù–∞–¥ —Ç–∞–±–ª–∏—Ü–µ–π —Ñ–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å —Ç—Ä–µ–º—è –ø–æ–ª—è–º–∏:

// Name Surname (input)
// Comics (DC, Marvel, Comix Zone) (select) ‚Äì –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –º–µ—Ç–æ–¥–æ–º GET —Å —Ä–µ—Å—É—Ä—Å–∞ universes

// Favourite (true, false) (checkbox).

// ! –î–µ–π—Å—Ç–≤–∏—è:

// –ü—Ä–∏ —Å–∞–±–º–∏—Ç–µ —Ñ–æ—Ä–º—ã –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ –±–∞–∑—É (POST)
// –∏ –≤—ã–≤–æ–¥ –≤ html —Å—Ç—Ä–æ–∫–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≥–µ—Ä–æ–µ –≤ —Ç–∞–±–ª–∏—Ü—É.
// –ï—Å–ª–∏ –≤ –±–∞–∑–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≥–µ—Ä–æ–π —Å —Ç–∞–∫–∏–º –∂–µ —Å–≤–æ–π—Å—Ç–≤–æ–º name,
// —Ç–æ –æ–±—ä–µ–∫—Ç –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –±–∞–∑—É (–º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤ –∫–æ–Ω—Å–æ–ª—å –≤—ã–≤–µ—Å—Ç–∏ –∏–Ω—Ñ—É,
// —á—Ç–æ —é–∑–µ—Ä —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ).
// –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è checkbox –≤ –∫–æ–ª–æ–Ω–∫–µ Favourite –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ —ç—Ç–æ–º—É –ø–µ—Ä—Å–æ–Ω–∞–∂—É –≤ –±–∞–∑–µ (PUT).
// –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É Delete –≤ —Å—Ç—Ä–æ–∫–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —É–¥–∞–ª–µ–Ω–∏–µ—Å –±–∞–∑—ã
// —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –≥–µ—Ä–æ—è (DELETE) –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π tr —Å —Ç–∞–±–ª–∏—Ü—ã.

// –ë–∞–∑–æ–≤–∞—è –≤–µ—Ä—Å—Ç–∫–∞ –≤ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–º –∞—Ä—Ö–∏–≤–µ heroes.zip.

const API = "https://63f0c7635b7cf4107e26a8c8.mockapi.io";

// ! –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å
async function controller(method, action, body) {
    const URL = `${API}/${action}`;
    const params = {
        method,
        headers: {
            "Content-Type": "application/json"
        },
    };
    if (body) params.body = JSON.stringify(body);

    const response = await fetch(URL, params);
    const data = await response.json();
    return data;
};

// ! IMAGE BASE 64
const getBase64 = file => {
    return new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onload = () => resolve(reader.result);
        reader.onerror = error => resolve("");
    });
};

const form = document.getElementById("heroesForm");
// ! –°–æ–±—ã—Ç–∏–µ –Ω–∞ —Ñ–æ—Ä–º—É
form.addEventListener("submit", e => {
    e.preventDefault();
    const newUser = createUser();
});

// ! –ó–∞–ø—Ä–æ—Å –Ω–∞ comics –∏–∑ —Å–µ—Ä–≤–µ—Ä–∞
async function getCosmics() {
    const response = await controller("GET", "universes");
    response.forEach(item => {
        const comics = document.getElementById("comics");
        const optionCosmics = document.createElement("option");
        optionCosmics.value = `${item.name}`;
        optionCosmics.innerText = `${item.name}`;
        comics.append(optionCosmics);
    })
}
getCosmics();

// ! –°–æ–∑–¥–∞–Ω–∏–µ —é–∑–µ—Ä–∞
async function createUser() {
    const fullName = document.getElementById("name").value;
    const comics = document.getElementById("comics").value;
    const inputFavourite = document.getElementById("inputFavourite").checked;

    // ! –ù–ï –Ω—É–∂–Ω–æ —Å—Ç–∞–≤–∏—Ç—å value
    const image = document.getElementById("avatar");
    console.log(image);
    console.dir(image);

    const avatar = await getBase64(image.files[0]);
    console.log(avatar);

    // ! –ó–∞–ø—Ä–æ—Å —Å —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –∏–º–µ–Ω–∏ —é–∑–µ—Ä–∞
    const dataServ = await controller("GET", "heroes");

    // ! —Å–ø–æ—Å–æ–± 2
    if (dataServ.find(item => fullName === item.name)) {
        console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
        alert("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
    } else {
        const body = {
            name: fullName,
            comics,
            avatar,
            favorite: inputFavourite,
        }

        const response = await controller("POST", "heroes", body);
        await renderUser(response);
        console.log(response);
    }
};

const tbody = document.getElementById("tbody");
// ! –ó–∞–ø—Ä–æ—Å users –∏–∑ —Å–µ—Ä–≤–µ—Ä–∞
async function responseUserServ() {
    const response = await controller("GET", "heroes");
    response.forEach(async item => {
        await renderUser(item)
    })
}
responseUserServ();

// ! –†–µ–Ω–¥–µ—Ä —é–∑–µ—Ä–∞
async function renderUser(item) {

    const tr = document.createElement("tr");

    tr.id = `${item.id}`;

    const tdName = document.createElement("td");
    tdName.innerText = `${item.name}`;

    const tdComics = document.createElement("td");
    tdComics.innerText = `${item.comics}`;

    const tdFavorite = document.createElement("td");

    const labelFavorite = document.createElement("label");
    labelFavorite.classList.add("heroFavouriteInput");
    labelFavorite.innerText = "Favourite:";

    const inputFavorite = document.createElement("input");
    inputFavorite.setAttribute("type", "checkbox");

    // ! –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ checked –ø–µ—Ä–µ–≤–æ–¥–∏—Ç checkbox –≤ true
    if (item.favorite === true) inputFavorite.setAttribute("checked", "");

    inputFavorite.addEventListener("click", async () => {
        // ! –ó–∞–ø—Ä–æ—Å –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è Favourite
        const body = { ...item, favorite: inputFavorite.checked };
        const response = await controller("PUT", `heroes/${item.id}`, body);
    })

    const tdButton = document.createElement("td");
    const button = document.createElement("button");
    button.innerText = "Delete:";

    const avatarImage = document.createElement("img");
    avatarImage.setAttribute("src", `${item.avatar}`);



    tr.append(tdName);
    tr.append(tdComics);

    labelFavorite.append(inputFavorite);
    tdFavorite.append(labelFavorite);
    tr.append(tdFavorite);

    tdButton.append(button);
    tr.append(tdButton);

    tr.append(avatarImage);

    tbody.prepend(tr);

    // ! –£–¥–∞–ª–µ–Ω–∏–µ —é–∑–µ—Ä–∞
    button.addEventListener("click", async () => {
        const response = await controller("DELETE", `heroes/${item.id}`);
        const element = document.getElementById(`${item.id}`)
        element.remove();
    })
}

const input = document.getElementById("input");
const cont = document.getElementById("cont");
const coment = document.getElementById("coment");
cont.append(coment);

// !—Å–æ–±—ã—Ç–∏–µ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ (input –∏–ª–∏ change)
input.addEventListener("input", e => {
    console.log(e.target.value);

    e.target.value === '' ? coment.innerText = "–í–≤–µ–¥–∏—Ç–µ —á—Ç–æ –Ω–∏–±—É–¥—å." : coment.innerText = '';
})





// !!!!!!!!!!!!!!!!
// ! –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ universes
// const infoCosmics = [
//     {
//         "name": "Marvel",
//     },
//     {
//         "name": "DC",
//     },
//     {
//         "name": "Comix Zone",
//     },
// ];

// function postComics(cosmic) {
//     const body = cosmic[2];
//     const data = controller("POST", "universes", body)
// }
// postComics(infoCosmics);

